#!/usr/bin/env bash
#
# Run a variety of backups for different targets.
#
# When adding target, add to `all` as well as single command.
#

#######################################
# Set color helpers for output.
#######################################
_set_colors() {
	red=$(tput setaf 1)
	green=$(tput setaf 2)
	reset=$(tput sgr0)
}

#######################################
# Display backup start message.
#######################################
_display_start() {
	echo "   $1   $2 ... "
}

#######################################
# Display backup end message.
#######################################
_display_done() {
	if [[ -z "$1" && "$1" == "error" ]];then
		echo "${red}${2}${reset}"
	else
		echo "${green}done.${reset}"
	fi
}

#######################################
# Backup xavier server.
#######################################
backup_xavier() {
	_display_start "" "xavier"
	ssh xavier "rclone copy --fast-list --progress --copy-links --checkers 20 --transfers 20 /etc/caddy b2:parbs-xavier/etc/caddy"
	ssh xavier "rclone copy --fast-list --progress --copy-links --checkers 20 --transfers 20 /var/www b2:parbs-xavier/var/www"
	ssh xavier "rclone copy --fast-list --progress --copy-links --checkers 20 --transfers 20 /root/docker b2:parbs-xavier/docker"
	_display_done
}

#######################################
# Backup pihole.
#######################################
backup_pihole() {
	_display_start "" "pihole"
	ssh pihole "rclone copy --fast-list --progress --copy-links --exclude '.git/**' --checkers 50 --transfers 50 /var/www b2:parbs-pihole/var/www"
	ssh pihole "rclone copy --fast-list --progress --copy-links --exclude '.git/**' --exclude 'wp-gen/**' --exclude '.cache/**' --checkers 50 --transfers 50 /home/pi b2:parbs-pihole/home/pi"
	_display_done
}

#######################################
# Backup dropbox via b2 targets.
#######################################
backup_dropbox() {
	_display_start "" "dropbox"
	rclone copy --fast-list --progress --copy-links --checkers 8 --transfers 10 dropbox: b2:parbs-dropbox
	_display_done
}

#######################################
# Backup dropbox from local files
#######################################
backup_dropbox_local() {
	_display_start "" "dropbox-local"
	rclone copy --fast-list --progress --copy-links --exclude '.git/**' --exclude 'node_modules/**' --exclude '.dropbox.cache/**' --checkers 50 --transfers 50 /Users/brad/Dropbox b2:parbs-dropbox
	_display_done
}

#######################################
# Backup SDR - currently not configured.
#######################################
backup_sdr() {
	_display_start "殺" "sdr"
	_display_done "error" "not configured"
}

#######################################
# Backup screen - currently not configured.
#######################################
backup_screen() {
	_display_start "" "screen"
	_display_done "error" "not configured"
}

#######################################
# Backup github user
#######################################
backup_github() {
	_display_start "" "github"

	gh-backup user bradp

	_display_done
}

#######################################
# Backup github stars.
#######################################
backup_github_stars() {
	_display_start "" "github-stars"

	gh-backup starred bradp

	_display_done
}

#######################################
# Backup the media HDD
#######################################
backup_media_hdd() {
	_display_start "" "media-hdd"

	if [[ -d /Volumes/Small/Media ]]; then
		rclone copy --fast-list --progress --copy-links --checkers 50 --transfers 100 /Volumes/Small/Media b2:parbs-media

		_display_done
	else
		_display_done error "hard drive not found"
	fi
}

#######################################
# Backup pocket items.
#######################################
backup_pocket() {
	_display_start "" "pocket"

	cd "$HOME/Dropbox/Working/backups/pocket" || exit

	items=$( bash api pocket /get | jq -r ".list[].resolved_url")

	date=$(date +"%Y-%m-%d")
	mkdir "$date" 2> /dev/null
	cd "$date" || exit

	for i in $items; do
		echo ""
		echo "$i"
		wget --quiet --show-progress --progress=bar:force:noscroll --page-requisites "$i"
	done

	cd ../

	rclone copy --fast-list --progress --copy-links --checkers 50 --transfers 100 "$date" b2:parbs-pocket
}

#######################################
# Backup ~/Sites
#######################################
backup_www() {
	_display_start "" "www"

	rclone copy --fast-list --progress --copy-links --checkers 50 --transfers 100 "$HOME/Sites" b2:parbs-www

	_display_done
}
#######################################
# Backup sites to the wayback machine.
#######################################
backup_wayback() {
	_display_start "" "wayback"

	wayback site bradparbs.com
	wayback site advanced.rocks
	wayback site beginner.rocks
	wayback site brad.cash
	wayback site bradparbs.com
	wayback site butts.tech
	# wayback site gifsb.in
	wayback site horror.watch
	wayback site isitsnowinginmilwaukee.com
	wayback site sax.cat
}

#######################################
# Run all (well most) backup targets.
#######################################
backup_all() {
	_display_start " " "all"

	backup_xavier
	backup_pihole
	backup_sdr
	backup_screen
	backup_dropbox
	backup_dropbox_local
	backup_github
	backup_github_stars
	backup_pocket
	backup_wayback
}

#######################################
# Display help/usage.
#######################################
_display_help() {
	echo "${red} Available targets: ${reset}"
	echo ""
	echo "${green}  •   all${reset}"
	echo ""
	echo "  •   www"
	echo ""
	echo "  •   xavier"
	echo ""
	echo "  •   pihole"
	echo ""
	echo "  • 殺 sdr"
	echo ""
	echo "  •    screen"
	echo ""
	echo "  •   dropbox"
	echo ""
	echo "  •   dropbox-local"
	echo ""
	echo "  •   github"
	echo ""
	echo "  •   github-stars"
	echo ""
	echo "  •   pocket"
	echo ""
	echo "  •   wayback"
	echo ""
	echo "  •   media-hdd (not run with 'all')"
	echo ""

	exit
}


_set_colors

if [[ -z "$1" ]]; then
	_display_help
	exit
fi

case "${1-help}" in
	-v | --verbose) set -x ;;
	-h | --help) _display_help ;;
	all) backup_all ;;
	xavier) backup_xavier ;;
	www) backup_www ;;
	pihole) backup_pihole ;;
	sdr) backup_sdr ;;
	screen) backup_screen ;;
	dropbox) backup_dropbox ;;
	dropbox-local) backup_dropbox_local ;;
	github) backup_github ;;
	github-stars) backup_github_stars ;;
	media-hdd) backup_media_hdd ;;
	pocket) backup_pocket ;;
	wayback) backup_wayback ;;
esac
shift
